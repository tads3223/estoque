# Identificacao do servidor
server.servlet.context-path=/estoque
server.error.whitelabel.enabled=false

spring.application.name=estoque

#spring.datasource.url=jdbc:h2:file:./estoquedb
spring.datasource.url=jdbc:h2:mem:estoquedb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Propriedade utilizada para permitir que a carga dos dados ocorra 
# ap\u00f3s a cria\u00e7\u00e3o do schema do banco de dados
spring.jpa.defer-datasource-initialization=true

spring.sql.init.platform=h2
spring.sql.init.mode=ALWAYS

# Caminho customizado para acessar a documenta\u00e7\u00e3o do swagger
# O acesso ocorre pelo link: http://localhost:8080/api-docs
springdoc.api-docs.path=/api-docs
# Para acesso padr\u00e3o \u00e0 documenta\u00e7\u00e3o deve-se utilizar a url: http://localhost:8080/swagger-ui/index.html
# Altera\u00e7\u00e3o da url padr\u00e3o da documenta\u00e7\u00e3o
springdoc.swagger-ui.path=/documentation.html
springdoc.swagger-ui.operationsSorter=alpha

# Propriedades de configura\u00e7\u00e3o do OAuth 2.0
spring.security.oauth2.client.registration.google.client-id=
spring.security.oauth2.client.registration.google.client-secret=
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://accounts.google.com


# Estoque properties
estoque.jwt.private.key=classpath:app.key
estoque.jwt.public.key=classpath:app.pub
